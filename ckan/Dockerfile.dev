FROM ckan/ckan-dev:2.11

# Change to root user
USER root
# Install vim for editing files
RUN apt-get update && apt-get install -y vim

# dcor_control installation takes place in ".local" and cached in ".cache" dirs
# so ckan need to access these dirs.
RUN mkdir /srv/app/.local && chown -R ckan:ckan-sys /srv/app/.local
RUN mkdir /srv/app/.cache && chown -R ckan:ckan-sys /srv/app/.cache

# Add python bin (dcor_control is installed here) dir to PATH
ENV PATH="/srv/app/.local/bin:${PATH}"

# dcor stores configuration keys here
RUN mkdir /srv/app/.config && \
    chown -R ckan:ckan-sys /srv/app/.config

# Create the directory (if it doesn't already exist)
RUN chown -R ckan:ckan-sys /var/log && \
    chmod -R 775 /var/log

RUN mkdir -p /var/lib/ckan/storage/uploads/admin && \
    chown -R ckan:ckan-sys /var/lib/ckan/storage/uploads

RUN mkdir -p /var/lib/ckan/i18n && \
    chown -R ckan:ckan-sys /var/lib/ckan/i18n

# Copy custom initialization scripts
COPY --chown=ckan-sys:ckan-sys docker-entrypoint.d/* /docker-entrypoint.d/

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)
COPY --chown=ckan-sys:ckan-sys patches ${APP_DIR}/patches

USER ckan

RUN for d in $APP_DIR/patches/*; do \
        if [ -d $d ]; then \
            for f in `ls $d/*.patch | sort -g`; do \
                cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
            done ; \
        fi ; \
    done
